// npmBin must be a string; npmCommand *should* be something non-empty;
// cwd and env are not used here; extra *should* be something that can be spread.
let lastTarget

module.exports = (npmBin, npmCommand, cwd, env, extra) => {
  // These 3 lines come directly from actual module
  const isJS = npmBin.endsWith('.js')
  const cmd = isJS ? process.execPath : npmBin
  const args = (isJS ? [npmBin] : []).concat(npmCommand)

  // What @npmcli/promise-spawn returns:
  // result is an object containing cmd, args, code, signal, <-- last 2 cause rejection
  // contents of stdioResult, contents of extra
//console.log(`pacote/lib/util/npm: (${npmBin}, [${npmCommand}], ${cwd}, [env],`, extra)
  lastTarget = cwd
  return Promise.resolve({
    cmd, args, code: 0, signal: 0, whatever: 'yada', ...extra
  })
}

module.exports.lastTarget = () => {
  const value = lastTarget
  lastTarget = undefined
  return value
}