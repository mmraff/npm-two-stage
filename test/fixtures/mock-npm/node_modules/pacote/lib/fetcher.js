const npa = require('npm-package-arg')
const readPackageJsonFast = require('read-package-json-fast')
const _readPackageJson = Symbol.for('package.Fetcher._readPackageJson')

module.exports = class Fetcher {
  constructor (spec, opts) {
    // All of these items copied from actual pacote/lib/fetcher constructor.
    // Some of them are not really important for this mock. We'll have to see.
    this.spec = npa(spec)
    this.from = this.spec.registry ?
      `${this.spec.name}@${this.spec.rawSpec}` : this.spec.saveSpec
    this.opts = {...opts}

    this.cache = opts.cache //|| cacheDir() // TODO: look into it

    this.package = null

    this.preferOnline = !!opts.preferOnline
    this.preferOffline = !!opts.preferOffline
    this.offline = !!opts.offline

    // command to run 'prepare' scripts on directories and git dirs
    this.npmBin = opts.npmBin || 'npm'
    // command to install deps for preparing
    this.npmInstallCmd = opts.npmInstallCmd || [ 'install', '--force' ]
    this.npmCliConfig = opts.npmCliConfig || [
      //`--cache=${dirname(this.cache)}`,
      `--prefer-offline=${!!this.preferOffline}`,
      `--prefer-online=${!!this.preferOnline}`,
      `--offline=${!!this.offline}`,
      //...(this.before ? [`--before=${this.before.toISOString()}`] : []),
      '--no-progress',
      '--no-save',
      '--no-audit',
      // override any omit settings from the environment
      '--include=dev',
      '--include=peer',
      '--include=optional',
      // we need the actual things, not just the lockfile
      '--no-package-lock-only',
      '--no-dry-run',
    ]

    this.fullReadJson = !!opts.fullReadJson
    if (this.fullReadJson) {
console.log('$$$ MOCK pacote fetcher.js TODO: we must add a mock read-package-json')
      //this[_readPackageJson] = readPackageJson
    } else {
      this[_readPackageJson] = readPackageJsonFast
    }
  }
}
