const path = require('path')
const npa = require('npm-package-arg')
const readPackageJsonFast = require('read-package-json-fast')
const _readPackageJson = Symbol.for('package.Fetcher._readPackageJson')

class FetcherBase {
  constructor (spec, opts) {
    if (!opts || typeof opts !== 'object') {
      throw new TypeError('options object is required')
    }

    // All of these REQUIRED!
    this.spec = npa(spec, opts.where)
    this.from = this.spec.registry
      ? `${this.spec.name}@${this.spec.rawSpec}` : this.spec.saveSpec
    this.opts = {...opts}

    this.package = null

    this[_readPackageJson] = readPackageJsonFast // REQUIRED!

    // command to run 'prepare' scripts on directories and git dirs
    this.npmBin = opts.npmBin || 'npm' // REQUIRED!
  }
}
module.exports = FetcherBase
